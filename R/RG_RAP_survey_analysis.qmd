---
title: "Regions Group RAP survey results"
author: "Jake Tufts"
date-modified: "`r Sys.Date()`"
format: 
  html:
    embed-resources: true
---

## Introduction

This Quarto document analyses the 2023 (early 2024) RAP Survey results for the Regions Group division. The areas focused on are:

- Most common/important needs in your area
- Biggest problems for people in your area when attempting RAP
- Ideas to support the people in your area with RAP


```{r}
#| label: load
#| echo: false
#| output: false

library(here)
library(ggplot2)
library(afcolours)
library(glue)
library(waffle)
library(tidytext)
library(wordcloud2)
source(here('R', 'helpers.R'))
source(here('R', 'load_data.R'))
source(here('R', 'visualisations.R'))
source(here('R', 'transform.R'))

# Subset results for RG
choose_divisions <- c("Regions Group")

# All reponses
division_data_full <- RAP_full |>
  filter_for_divisions(choose_divisions)

# Unique responses
division_data <- RAP_full |>
  filter_for_divisions(choose_divisions) |>
  filter(!duplicated(Email, fromLast = TRUE))
  
```



## Population

Here we look at the Regions Group population.

```{r}
#| label: waffle-plot
#| echo: false

waffle_pop_plot(df_div = division_data_full,
                df_all = RAP_full)

num_rg_resp <- nrow(division_data_full)

```


There were `r num_rg_resp` responses, of which came from `r length(unique(division_data$Email))` different respondents.


## Most common needs

Below is a bar chart of the survey questions which related to why people need RAP.
The answers to the questions were a ranking from Strongly disagree to Neutral to Strongly agree.
A bi-polar Likert scale is used (Disagreement is negative, Neutral is 0 and Agreement is positive).


```{r}
#| label: needs-bar
#| echo: false

# Convert to bi-polar Likert scale
bi_division_data_numerical <- rank_to_num(df = division_data,
                                       ranked_columns = ranked_columns,
                                       likert_scale_dictionary = bi_likert_scale_dictionary,
                                       numerical_ranking_factors = bi_numerical_ranking_factors)

# Create long version of numerical data
div_data_num_long <- rank_to_long(bi_division_data_numerical, 
                                  cols_long = ranked_columns)


# Organisation cols
org_cols <- division_data |> 
  select(1:which(names(division_data)=="Group")) |> 
  colnames()

# Convert num survey qs to long
needs_qs <- c("repetitive_tasks", "figuring_out_existing_processes_time_consuming",
                "someone_else_could_run", "re-run_old_versions", "QA_manual_checks")


# Dataframe storing rank values
sum_ranks <- data.frame(rank = ranking_factors, value = as.numeric(bi_numerical_ranking_factors))


# Bar chart
div_data_num_long |> 
  filter(questions %in% needs_qs) |> 
  summarise(total_rank = mean(as.numeric_factor(responses)),
            .by = c("questions")) |> 
  arrange(desc(total_rank)) |> 
  mutate(questions = unlist(column_names_dictionary[questions]),
         questions = factor(questions, levels = questions)) |> 
  ggplot(aes(x = questions, y = total_rank)) +
  geom_col(fill = af_blue, colour = af_blue) +
  lapply(1:nrow(sum_ranks), function(i) {
    geom_hline(aes(yintercept = sum_ranks$value[i]), color = RG_colours[i], linetype = "dashed")
  }) +
  geom_text(aes(x = Inf, y = sum_ranks$value[1], label = sum_ranks$rank[1]),
              hjust = 1.2, color = RG_colours[1], vjust = -0.5) +
    geom_text(aes(x = Inf, y = sum_ranks$value[2], label = sum_ranks$rank[2]),
              hjust = 1.4, color = RG_colours[2], vjust = 1.5) +
    geom_text(aes(x = Inf, y = sum_ranks$value[3], label = sum_ranks$rank[3]),
              hjust = 1.5, color = RG_colours[3], vjust = 1.5) +
      geom_text(aes(x = Inf, y = sum_ranks$value[4], label = sum_ranks$rank[4]),
              hjust = 1.7, color = RG_colours[4], vjust = 1.5) +
      geom_text(aes(x = Inf, y = sum_ranks$value[5], label = sum_ranks$rank[5]),
              hjust = 1.3, color = RG_colours[5], vjust = 1.5) +
  labs(title = "Reptitive tasks and manual QA checks are recurring issues",
       subtitle = "Bar chart showing the average rank (using a bipolar Likert scale) of the survey\nquestions relating to needs for RAP.",
       x = "Survey questions",
       y = "Average of Likert ranked survey questions") +
  scale_x_discrete(labels = insert_line_breaks) +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 0)
  )



```

It should be noted that someone_else_could_run is a positively framed question.
So, disagreement infers a need to address the issue.


Now, we look at how many people use code.



```{r}
#| label: who-codes

# RAG bar chart for question I_use_code
division_data |>
  select(ID, line_manager, I_use_code, comfortable_with_code) |>
  rank_to_long(cols_long = "I_use_code", line_manager) |> 
  ggplot(aes(x = responses, fill = responses)) +
  geom_bar(colour = "black") +
  scale_fill_manual(values = likert_colours, drop=FALSE) +
  scale_x_discrete(drop=FALSE) +
  labs(
    title = "Most people use code, but there is room for more",
    subtitle = paste0("Bar chart showing count of people who responded to the",
                      ' question "I regularly perform analysis using code"',
                      " grouped by response."),
    x = "",
    y = "Count",
    fill = "Responses"
  ) +
  facet_wrap(~ factor(line_manager,
                      levels = c(FALSE, TRUE),
                      labels = c("Non-line manager", "Line manager")),
             dir = "v") +
  theme_minimal()

```


The data is subset to include only those people who agreed with the 
"I regularly perform analysis using code" statement.
This is done to analyse the code-related questions.



```{r}
#| label: code-comfortability

code_qs <- c("comfortable_with_code", "open_source_tools", 
            "know_how_to_open_source", "version_control_confusing")

# Multi-panel plot of bar charts to show how coders rank code qs
division_data |> 
  filter(I_use_code %in% c("Strongly agree", "Agree")) |> 
  rank_to_long(cols_long = code_qs) |> 
  mutate(questions = unlist(column_names_dictionary[questions])) |> 
  ggplot(aes(x = responses, fill = responses)) +
  geom_bar(colour = "black") +
  scale_fill_manual(values = likert_colours) +
  labs(
    title = "Coders are less comfortable with version control and open-sourcing",
    subtitle = paste0("Bar charts showing count of coders* who reponded to the",
                      " code related questions grouped by response."),
    caption = paste0("*coders means only those who agreed with the statement",
                     ' "I regularly perform analysis using code" are included.'),
    x = "",
    y = "Count",
    fill = "Responses"
  ) +
  facet_wrap(~ factor(questions, unlist(column_names_dictionary[code_qs]))) +
  theme_minimal()

```


## RAP specific

A lollipop plot displays the respondent's feelings towards RAP.
The Bi-polar Likert rank scale is used again and the average is calculated.
Three vertical lines are drawn on the plot to show where qualitative ranks lie 
relative to the numerical scale. 



```{r}
#| label: RAP

rap_qs <- original_names[19:26]

# Lollipop plot to visualise how coders compare to non coders on RAP
div_data_num_long |> 
  mutate(responses = as.numeric_factor(responses),
         questions = unlist(column_names_dictionary[questions])) |>
  filter(questions %in% rap_qs) |> 
  summarise(avg_rank = mean(responses, na.rm = T), .by="questions") |>
  ggplot(aes(x = reorder(questions, desc(avg_rank)), y = avg_rank)) +
  geom_point() +
  geom_segment(aes(x=questions, xend=questions,
                   y=0, yend=avg_rank )) +
  geom_hline(yintercept = bi_likert_scale_dictionary[c("Agree", "Neutral", "Disagree")],
             color = RG_colours[c(4, 3, 2)], linetype = "dashed") +
  lapply(c("Agree", "Neutral", "Disagree"), function(resp) {
    geom_text(aes(label = resp, y = bi_likert_scale_dictionary[resp], x=Inf), 
              color = RG_colours[match(resp, c("Disagree", "Neutral", "Agree"))+1], vjust=4)
  }) +
  scale_y_continuous(limits = c(-1,1)) +
  scale_x_discrete(labels = insert_line_breaks) +
  coord_flip() +
  labs(
    title = "RAP is regarded as useful, but there lacks the confidence/expertise to implement it",
    subtitle = paste0("Lolliplot showing the average scores for RAP related",
                      " questions using a bi-polar Likert ranking scale."),
    x = "",
    y = "Average score (bi-polar Likert ranking)"
  ) +  
  theme_minimal()
```



## Line manager specific

Here we investigate how line managers specifically responded about RAP.
A lollipop plot is used again to summarise the average response rankings to the questions.


```{r}
#| label: line-managers

lm_qs <- original_names[25:42]

# Lollipop plot to visualise how coders compare to non coders on RAP
bi_division_data_numerical |> 
  rank_to_long(cols_long = ranked_columns, "line_manager") |> 
  mutate(responses = as.numeric_factor(responses),
         questions = unlist(column_names_dictionary[questions])) |>
  filter(line_manager == TRUE,
         questions %in% lm_qs) |> 
  summarise(avg_rank = mean(responses, na.rm = T), .by="questions") |>
  ggplot(aes(x = reorder(questions, desc(avg_rank)), y = avg_rank)) +
  geom_point() +
  geom_segment(aes(x=questions, xend=questions,
                   y=0, yend=avg_rank )) +
  geom_hline(yintercept = rev(bi_likert_scale_dictionary),
             color = RG_colours, linetype = "dashed") +
  
  lapply(ranking_factors, function(resp) {
             
    geom_text(aes(label = insert_line_breaks(resp, freq = 1),
                  y = bi_likert_scale_dictionary[resp], x=Inf), 
              color = RG_colours[match(resp, ranking_factors)],
              vjust=1.5)
             }
    ) +
  scale_y_continuous(limits = c(-2,2)) +
  scale_x_discrete(labels = insert_line_breaks) +
  coord_flip() +
  labs(
    title = paste0("Line managers are confident in their team to implement RAP, but ",
                   "are unsure about RAP themselves"),
    subtitle = paste0("Lolliplot showing the average scores for line manager RAP related",
                      " questions using a bi-polar Likert ranking scale."),
    x = "",
    y = "Average score (bi-polar Likert ranking)"
  ) +  
  theme_minimal()
```




## Qualitiative data

There are 5 applicable qualitative questions in the survey.
For Regions Group only 3 are suitable for analysis.
The other two have very low response rates and are summarised below:

- "If you would like to, please share who you currently go to for help with issues and questions on RAP"
  - DfE RAP channel (one response)
  
- "If you are nervous about your team implementing RAP, please explain why below:"
  - "I'm nervous about the assumption that they will be implementing it"



```{r}
#| label: word-freq

# Word freq plots (cleaned for stop words)
clean_word_col(division_data, "factors_limiting_reproducibility") |> 
  word_frequency(10) +
  labs(title = "Time is the biggest factor preventing people RAP",
       subtitle = paste0('Word frequency plot for survey question - "What do ',
                         'you think are the biggest factors that limit how ',
                         'easy your analytical process is to\nreproduce, ',
                         'understand, or quality assure?"'),
       caption = "Stop words have been removed") +
  theme_minimal()

```


Word cloud for question:

**What support would you need to improve your current analytical processes or** 
**convert current analysis to RAP?**

```{r}
#| label: word_cloud-support

# Word cloud
wordcloud2(data = clean_word_col(division_data, "support_needed"),
           shape = "circle", size = 0.7, ellipticity = 0.8,
           rotateRatio = 0)

```


<br>

Word cloud for question:

**What projects do you work on that you feel would benefit most from automation** 
**and RAP processes?**

```{r}
#| label: word_cloud-proj_rap


# Word cloud
wordcloud2(data = clean_word_col(division_data, "projects_benefit_from_RAP"),
           shape = "circle", size = 0.7, ellipticity = 0.8,
           rotateRatio = 0)

```








## Caveats

*Duplicates*

There are duplicate answers (where someone has filled out the survey twice).
Instead of keeping them, we remove any duplicated answers after the person's first response.
This was done to avoid inflation of responses.


*Line managers*

The data includes managers who are not necessarily involved in day-to-day coding.
We attempt to control for this by separating them out for the "Who codes?" analysis.
The responses to questions relating to coding are kept only for those people who 
agreed with the question "I regularly perform analysis using code".


*Missing population*

There are several analysts who did not complete the survey 
